<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ensys.qray.web.blurb02.blurb02Mapper">

	<select id="packageHeader" resultType="hashmap" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageHeader*/
		SELECT 	A.COMPANY_CD 	AS "COMPANY_CD"
			 , 	A.PKG_CD		AS "PKG_CD"
			 , 	A.PKG_NM		AS "PKG_NM"
			 , 	A.USE_YN		AS "USE_YN"
			 , 	A.CREATE_DT		AS "CREATE_DT"
			 , 	A.INSERT_ID		AS "INSERT_ID"
			 , 	A.INSERT_DTS	AS "INSERT_DTS"
			 , 	A.UPDATE_ID		AS "UPDATE_ID"
			 , 	A.UPDATE_DTS	AS "UPDATE_DTS"
		FROM ES_BLURB_PKG_M A
		WHERE A.COMPANY_CD = #{COMPANY_CD}
	</select>

	<select id="packageDetail" resultType="hashmap" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageDetail*/
		SELECT 	A.COMPANY_CD	 AS "COMPANY_CD"
			  , A.PKG_CD		 AS "PKG_CD"
			  , A.ADV_CD		 AS "ADV_CD"
		      , B.ADV_NM		 AS "ADV_NM"
			  , A.SEQ			 AS "SEQ"
              , A.AM			 AS "AM"
              , B.BLURB_AM		 AS "BLURB_AM"
              , A.SALE_RT		 AS "SALE_RT"
              , A.INSERT_ID		 AS "INSERT_ID"
              , A.INSERT_DTS	 AS "INSERT_DTS"
              , A.UPDATE_ID		 AS "UPDATE_ID"
              , A.UPDATE_DTS	 AS "UPDATE_DTS"
		FROM ES_BLURB_PKG_D A
		LEFT JOIN ES_BLURB_MASTER B
		   	ON A.COMPANY_CD = B.COMPANY_CD
			AND A.ADV_CD = B.ADV_CD
		WHERE A.COMPANY_CD = #{COMPANY_CD}
		AND A.PKG_CD = #{PKG_CD}
	</select>

	<insert id="packageHcreated" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageHcreated*/
		INSERT INTO ES_BLURB_PKG_M
		(
			COMPANY_CD
		, PKG_CD
		, PKG_NM
		, USE_YN
		, CREATE_DT
		, INSERT_ID
		, INSERT_DTS
		, UPDATE_ID
		, UPDATE_DTS
		)
		VALUES
		(
			#{COMPANY_CD}
		, #{PKG_CD}
		, #{PKG_NM}
		, #{USE_YN}
		, #{CREATE_DT}
		, #{INSERT_ID}
		, #{INSERT_DTS}
		, #{UPDATE_ID}
		, #{UPDATE_DTS}
		)

	</insert>

	<insert id="packageDcreated" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageDcreated*/
		INSERT INTO ES_BLURB_PKG_D
		(
			COMPANY_CD
		, PKG_CD
		, ADV_CD
		, SEQ
		, AM
		, SALE_RT
		, INSERT_ID
		, INSERT_DTS
		, UPDATE_ID
		, UPDATE_DTS
		)
		VALUES
			(
				#{COMPANY_CD}
			, #{PKG_CD}
			, #{ADV_CD}
			, (SELECT COALESCE(MAX(SEQ), 0) + 1
			   FROM ES_BLURB_PKG_D
			   WHERE COMPANY_CD = #{COMPANY_CD}
				 AND PKG_CD = #{PKG_CD}
				 AND ADV_CD = #{ADV_CD})
			, #{AM}
			, #{SALE_RT}
			, #{INSERT_ID}
			, #{INSERT_DTS}
			, #{UPDATE_ID}
			, #{UPDATE_DTS}
			)
	</insert>

	<update id="packageHupdated" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageHupdated*/
		UPDATE ES_BLURB_PKG_M
		SET USE_YN = #{USE_YN}
		  ,	PKG_NM = #{PKG_NM}
		  ,	UPDATE_ID = #{UPDATE_ID}
		  ,	UPDATE_DTS = #{UPDATE_DTS}
		WHERE COMPANY_CD = #{COMPANY_CD}
		  AND   PKG_CD = #{PKG_CD}
	</update>

	<update id="packageDupdated" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageDupdated*/
		UPDATE ES_BLURB_PKG_D
		SET AM = #{AM}
		  ,	SALE_RT = #{SALE_RT}
		  ,	UPDATE_ID = #{UPDATE_ID}
		  ,	UPDATE_DTS = #{UPDATE_DTS}
		WHERE COMPANY_CD = #{COMPANY_CD}
		  AND   PKG_CD = #{PKG_CD}
		  AND   ADV_CD = #{ADV_CD}
		  AND   SEQ = #{SEQ}
	</update>

	<delete id="packageHdeleted" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageHdeleted*/
		DELETE FROM ES_BLURB_PKG_M
		WHERE COMPANY_CD = #{COMPANY_CD}
		  AND   PKG_CD = #{PKG_CD}
	</delete>

	<delete id="packageDdeleted" parameterType="hashmap" statementType="CALLABLE">
		/*blurb02Mapper.packageDdeleted*/
		DELETE FROM ES_BLURB_PKG_D
		WHERE COMPANY_CD = #{COMPANY_CD}
		  AND   PKG_CD = #{PKG_CD}
		  AND   ADV_CD = #{ADV_CD}
		  AND   SEQ = #{SEQ}
	</delete>

</mapper>